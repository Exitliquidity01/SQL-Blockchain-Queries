WITH InitialTransfers AS (
    SELECT DISTINCT
        wallet_address
    FROM (
        SELECT 
            trader_id AS wallet_address,
            MIN(block_time) AS first_tx_time
        FROM
            dex_solana.trades
        WHERE
            token_bought_mint_address = '{{token}}'
        GROUP BY
            trader_id
        HAVING
            MIN(block_time) BETWEEN TIMESTAMP '2024-10-18 10:00:00 UTC' AND TIMESTAMP '2024-10-18 22:00:00 UTC'
    ) AS filtered_wallets
),

MintingAddresses AS (
    SELECT
        to_owner AS wallet_address
    FROM 
        tokens_solana.transfers
    WHERE 
        token_mint_address = '{{token}}'
        AND from_owner IS NULL
),

TotalSupply AS (
    SELECT
       amount / POW(10,{{decimals}}) AS total_supply
    FROM 
        tokens_solana.transfers
    WHERE 
        token_mint_address = '{{token}}'
        AND from_owner IS NULL
    ORDER BY block_time ASC
    LIMIT 1 
),

OutflowWallets AS (
    SELECT DISTINCT
        ts.to_owner AS wallet_address
    FROM
        tokens_solana.transfers ts
    JOIN
        InitialTransfers it ON ts.from_owner = it.wallet_address
    WHERE
        ts.token_mint_address = '{{token}}'
),

FilteredOutflowWallets AS (
    SELECT
        ow.wallet_address
    FROM
        OutflowWallets ow
    WHERE
        ow.wallet_address NOT IN (SELECT wallet_address FROM MintingAddresses)
),

CombinedWallets AS (
    SELECT wallet_address FROM InitialTransfers
    UNION DISTINCT
    SELECT wallet_address FROM FilteredOutflowWallets
),

WalletActivity AS (
    SELECT
        ts.block_time,
        ts.to_owner AS wallet_address,
        SUM(ts.amount) AS balance_change
    FROM
        tokens_solana.transfers ts
    WHERE
        ts.token_mint_address = '{{token}}'
        AND ts.to_owner IN (SELECT wallet_address FROM CombinedWallets)
    GROUP BY
        ts.block_time, ts.to_owner

    UNION ALL
    
    SELECT
        ts.block_time,
        ts.from_owner AS wallet_address,
        SUM(-ts.amount) AS balance_change
    FROM
        tokens_solana.transfers ts
    WHERE
        ts.token_mint_address = '{{token}}'
        AND ts.from_owner IN (SELECT wallet_address FROM CombinedWallets)
    GROUP BY
        ts.block_time, ts.from_owner
),

AccumulatedBalances AS (
    SELECT
        block_time,
        SUM(balance_change) OVER (ORDER BY block_time ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_balance
    FROM
        WalletActivity
)

SELECT
    ab.block_time AS "Block Time",
    ab.cumulative_balance / POW(10, {{decimals}}) AS "Cumulative Balance (in Tokens)",
   (SELECT total_supply FROM TotalSupply) As "Total Supply",
    (ab.cumulative_balance / POW(10, {{decimals}})) /  (SELECT total_supply FROM TotalSupply)  AS "Cumulative Supply"
FROM
    AccumulatedBalances ab

ORDER BY
    ab.block_time ASC;
