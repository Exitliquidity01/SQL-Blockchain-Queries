WITH 

tokens_received AS (
    SELECT 
        to_owner AS wallet,
        SUM(amount / POW(10, {{decimals}})) AS tokens_received
    FROM
        tokens_solana.transfers
    WHERE
        token_mint_address = '{{token}}'
    GROUP BY
        to_owner
),

tokens_sent AS (
    SELECT
        from_owner AS wallet,
        SUM(amount / POW(10, {{decimals}})) AS tokens_sent
    FROM
        tokens_solana.transfers
    WHERE
        token_mint_address = '{{token}}'
    GROUP BY
        from_owner
),

wallet_balances AS (
    SELECT
        COALESCE(tr.wallet, ts.wallet) AS wallet,
        COALESCE(tr.tokens_received, 0) - COALESCE(ts.tokens_sent, 0) AS balance
    FROM
        tokens_received tr
    FULL OUTER JOIN
        tokens_sent ts ON tr.wallet = ts.wallet
),

MintingAddresses AS (
    SELECT
        to_owner AS wallet_address
    FROM 
        tokens_solana.transfers
    WHERE 
        token_mint_address = '{{token}}'
        AND from_owner IS NULL
), 

TotalSupply AS (
    SELECT
       SUM(amount) / POW(10, {{decimals}}) AS total_supply
    FROM 
        tokens_solana.transfers
    WHERE 
        token_mint_address = '{{token}}'
        AND from_owner IS NULL
),

FilteredWallets AS (
    SELECT DISTINCT wallet
    FROM (
        SELECT 
            wallet,
            balance
        FROM
            wallet_balances
        WHERE
            wallet NOT IN (SELECT wallet_address FROM MintingAddresses)
        ORDER BY
            balance DESC
        LIMIT {{N}}
    ) AS subquery
),

WalletActivity AS (
    SELECT
        block_time, 
        to_owner AS wallet_address,
        SUM(amount) AS balance_change
    FROM
        tokens_solana.transfers
    WHERE
        token_mint_address = '{{token}}'
        AND to_owner IN (SELECT wallet FROM FilteredWallets)
    GROUP BY
        block_time, to_owner

    UNION ALL
    
    SELECT
        block_time, 
        from_owner AS wallet_address,
        SUM(-amount) AS balance_change
    FROM
        tokens_solana.transfers
    WHERE
        token_mint_address = '{{token}}'
        AND from_owner IN (SELECT wallet FROM FilteredWallets)
    GROUP BY
        block_time, from_owner
),

AccumulatedBalances AS (
    SELECT
        block_time,
        SUM(balance_change) OVER (ORDER BY block_time ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_balance
    FROM
        WalletActivity
)

SELECT
    ab.block_time AS "Block Time (Transaction Level)",
    ab.cumulative_balance / POW(10, {{decimals}}) AS "Cumulative Balance (in Tokens)",
    ts.total_supply AS "Total Supply",
    (ab.cumulative_balance / POW(10, {{decimals}})) / ts.total_supply AS "Percentage of Total Supply"
FROM
    AccumulatedBalances ab
CROSS JOIN
    TotalSupply ts
ORDER BY
    ab.block_time ASC

